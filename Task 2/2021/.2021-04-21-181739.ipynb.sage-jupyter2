{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"00449d","input":"# import packages\nfrom statistics import mean\nimport pandas as pd\nimport numpy as np\n\n# import Sklearn packages\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\nimport sklearn.metrics as metrics\n\n# Read data\ndf_features = pd.read_csv(\"train_features.csv\")\ndf_labels = pd.read_csv(\"train_labels.csv\")\n\nfeatures_subtask1 = [\"BaseExcess\" ,\"Fibrinogen\",\"AST\",\"Alkalinephos\",\"Bilirubin_total\",\"Lactate\",\"TroponinI\",\"SaO2\",\"Bilirubin_direct\",\"EtCO2\"]\nfeatures_subtask2 = [\"Sepsis\"]\n\nlabel_subtask1 = [\"LABEL_BaseExcess\" ,\"LABEL_Fibrinogen\",\"LABEL_AST\",\"LABEL_Alkalinephos\",\"LABEL_Bilirubin_total\",\"LABEL_Lactate\",\"LABEL_TroponinI\",\"LABEL_SaO2\",\"LABEL_Bilirubin_direct\",\"LABEL_EtCO2\"]\nlabel_subtask2 = [\"LABEL_Sepsis\"]\n","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a93403","input":"# preprocess:\n# replace NaN by the mean value of the column\ndf_features.fillna(df_features.mean(), inplace=True) #median + age range\n\npatientID = df_features[\"pid\"].drop_duplicates()\nnbrpatient = patientID.size","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d896f1","input":"Results = pd.DataFrame()\nfor i in features_subtask1:\n    X = df_features[[i]].to_numpy().reshape(nbrpatient,12)\n    Y = df_labels[\"LABEL_\"+i]\n    X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2)\n\n    model1 = SVC()\n    print(i)\n    model1.fit(X_train,Y_train)\n    Y_predicted = model1.predict(X_test)   #call decision_function instead\n    #print(model1.score(X_test,Y_test))\n\n    Results[\"LABEL_\"+i] = Y_predicted\n    print(metrics.roc_auc_score(Y_test, Y_predicted))\n","pos":2,"type":"cell"}
{"id":0,"time":1619117363504,"type":"user"}
{"last_load":1619131829901,"type":"file"}