{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-0ba51515-004c-474d-8ff0-607bbc0995df.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1618988552626,"exec_count":2,"id":"418295","input":"X_picklename = \"X_engineered_v2-incl-std.pkl\"\n#X_engineered.to_pickle(X_picklename)","kernel":"python3","pos":11,"start":1618988552616,"state":"done","type":"cell"}
{"cell_type":"code","end":1618988564598,"exec_count":4,"id":"0f13a8","input":"# import packages\nfrom statistics import mean\nimport pandas as pd\nfrom numpy import sqrt\n#from xgboost import XGBClassifier\n\n\n# import Sklearn packages\nfrom sklearn.linear_model import Ridge\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import KFold \n\n# Read data\ndf_features = pd.read_csv(\"train_features.csv\")\ndf_labels = pd.read_csv(\"train_labels.csv\")\nlabel_subtask1 = [\"pid\",\"BaseExcess\" ,\"Fibrinogen\",\"AST\",\"Alkalinephos\",\"Bilirubin_total\",\"Lactate\",\"TroponinI\",\"SaO2\",\"Bilirubin_direct\",\"EtCO2\"]\nlabel_subtask2 = [\"Sepsis\"]\n\n#print(df_features)\n# print(df_features[36:48][label_subtask1])\n# print(df_labels.iloc[11])\n#xgb = XGBClassifier()\n#xgb.fit(X_b_train, D_b_train, early_stopping_rounds=5, eval_set = [(X_b_val, D_b_val)])\n#D_hat_b = xgbc_b.predict(X_b_test)\n\n\n'''\n\nSubtasks:\nTask 1:\nbinary classification, 0,1\n\n'''","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/plain":"'\\n\\nSubtasks:\\nTask 1:\\nbinary classification, 0,1\\n\\n'"},"exec_count":4}},"pos":0,"start":1618988563083,"state":"done","type":"cell"}
{"cell_type":"code","end":1618988640594,"exec_count":9,"id":"58ab33","input":"all_features = [\"pid\", \"Time\", \"Age\", \"EtCO2\", \"PTT\", \"BUN\", \"Lactate\", \"Temp\", \"Hgb\", \"HCO3\", \"BaseExcess\", \"RRate\", \"Fibrinogen\", \"Phosphate\", \"WBC\", \"Creatinine\", \"PaCO2\", \"AST\", \"FiO2\", \"Platelets\", \"SaO2\", \"Glucose\", \"ABPm\", \"Magnesium\", \"Potassium\", \"ABPd\", \"Calcium\", \"Alkalinephos\", \"SpO2\", \"Bilirubin_direct\", \"Chloride\", \"Hct\", \"Heartrate\", \"Bilirubin_total\", \"TroponinI\", \"ABPs\", \"pH\"]\nfrom sklearn.model_selection import train_test_split\n\ny = df_labels['LABEL_Sepsis']\nX = df_features[all_features]\nX_filled = X.fillna(X.median())\n\n'''\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\nX_preprocessed_filled = pd.DataFrame()\ni = 0\nfor index, row in X_filled.iterrows():\n    if i%10 == 0:\n        print(i)\n    i = i+1\n    pid = row['pid']\n    age = row['Age']\n    time = int(row['Time'])\n    pid_frame = pd.DataFrame({\"pid\": [pid],\"Age\": [age]})\n    for feat in all_features[3:]:\n        new_feat = f\"{feat}_{time}\"\n        new_df = pd.DataFrame({\"pid\":[pid], new_feat:[row[feat]]})\n        #print(new_df)\n        pid_frame = pd.merge(pid_frame, new_df, on=\"pid\")\n        #pid_frame[new_feat] = row[feat]\n    #print(pid_frame)\n    X_preprocessed = X_preprocessed.append(pid_frame)\n\n#xgb.fit(df_features, Y, early_stopping_rounds=5)\n#Y_pred = xgb.predict(X_b_test)\n#print(X)\n#print(y)\n\n'''\nX_filled[X_filled['pid'] == 1]","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pid</th>\n      <th>Time</th>\n      <th>Age</th>\n      <th>EtCO2</th>\n      <th>PTT</th>\n      <th>BUN</th>\n      <th>Lactate</th>\n      <th>Temp</th>\n      <th>Hgb</th>\n      <th>HCO3</th>\n      <th>...</th>\n      <th>Alkalinephos</th>\n      <th>SpO2</th>\n      <th>Bilirubin_direct</th>\n      <th>Chloride</th>\n      <th>Hct</th>\n      <th>Heartrate</th>\n      <th>Bilirubin_total</th>\n      <th>TroponinI</th>\n      <th>ABPs</th>\n      <th>pH</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>3</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>12.0</td>\n      <td>2.1</td>\n      <td>36.0</td>\n      <td>8.7</td>\n      <td>24.0</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>114.0</td>\n      <td>24.6</td>\n      <td>94.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>142.0</td>\n      <td>7.33</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>4</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>36.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>30.9</td>\n      <td>99.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>125.0</td>\n      <td>7.33</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>5</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>36.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>30.9</td>\n      <td>92.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>110.0</td>\n      <td>7.37</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>6</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>30.9</td>\n      <td>88.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>104.0</td>\n      <td>7.37</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>7</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>22.4</td>\n      <td>81.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>100.0</td>\n      <td>7.41</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n      <td>8</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>22.4</td>\n      <td>82.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>106.0</td>\n      <td>7.37</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n      <td>9</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>30.9</td>\n      <td>67.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>112.0</td>\n      <td>7.37</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1</td>\n      <td>10</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>30.9</td>\n      <td>62.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>121.0</td>\n      <td>7.37</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>11</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>12.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>8.5</td>\n      <td>26.0</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>111.0</td>\n      <td>23.8</td>\n      <td>58.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>118.0</td>\n      <td>7.37</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>12</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>12.0</td>\n      <td>2.1</td>\n      <td>38.0</td>\n      <td>8.5</td>\n      <td>26.0</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>111.0</td>\n      <td>23.8</td>\n      <td>66.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>110.0</td>\n      <td>7.39</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>13</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>30.9</td>\n      <td>67.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>124.0</td>\n      <td>7.39</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>14</td>\n      <td>34.0</td>\n      <td>33.0</td>\n      <td>32.2</td>\n      <td>17.0</td>\n      <td>2.1</td>\n      <td>37.0</td>\n      <td>10.5</td>\n      <td>23.9</td>\n      <td>...</td>\n      <td>72.0</td>\n      <td>100.0</td>\n      <td>0.3</td>\n      <td>107.0</td>\n      <td>22.2</td>\n      <td>69.0</td>\n      <td>0.8</td>\n      <td>0.15</td>\n      <td>102.0</td>\n      <td>7.37</td>\n    </tr>\n  </tbody>\n</table>\n<p>12 rows × 37 columns</p>\n</div>","text/plain":"    pid  Time   Age  EtCO2   PTT   BUN  Lactate  Temp   Hgb  HCO3  ...  \\\n0     1     3  34.0   33.0  32.2  12.0      2.1  36.0   8.7  24.0  ...   \n1     1     4  34.0   33.0  32.2  17.0      2.1  36.0  10.5  23.9  ...   \n2     1     5  34.0   33.0  32.2  17.0      2.1  36.0  10.5  23.9  ...   \n3     1     6  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n4     1     7  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n5     1     8  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n6     1     9  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n7     1    10  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n8     1    11  34.0   33.0  32.2  12.0      2.1  37.0   8.5  26.0  ...   \n9     1    12  34.0   33.0  32.2  12.0      2.1  38.0   8.5  26.0  ...   \n10    1    13  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n11    1    14  34.0   33.0  32.2  17.0      2.1  37.0  10.5  23.9  ...   \n\n    Alkalinephos   SpO2  Bilirubin_direct  Chloride   Hct  Heartrate  \\\n0           72.0  100.0               0.3     114.0  24.6       94.0   \n1           72.0  100.0               0.3     107.0  30.9       99.0   \n2           72.0  100.0               0.3     107.0  30.9       92.0   \n3           72.0  100.0               0.3     107.0  30.9       88.0   \n4           72.0  100.0               0.3     107.0  22.4       81.0   \n5           72.0  100.0               0.3     107.0  22.4       82.0   \n6           72.0  100.0               0.3     107.0  30.9       67.0   \n7           72.0  100.0               0.3     107.0  30.9       62.0   \n8           72.0  100.0               0.3     111.0  23.8       58.0   \n9           72.0  100.0               0.3     111.0  23.8       66.0   \n10          72.0  100.0               0.3     107.0  30.9       67.0   \n11          72.0  100.0               0.3     107.0  22.2       69.0   \n\n    Bilirubin_total  TroponinI   ABPs    pH  \n0               0.8       0.15  142.0  7.33  \n1               0.8       0.15  125.0  7.33  \n2               0.8       0.15  110.0  7.37  \n3               0.8       0.15  104.0  7.37  \n4               0.8       0.15  100.0  7.41  \n5               0.8       0.15  106.0  7.37  \n6               0.8       0.15  112.0  7.37  \n7               0.8       0.15  121.0  7.37  \n8               0.8       0.15  118.0  7.37  \n9               0.8       0.15  110.0  7.39  \n10              0.8       0.15  124.0  7.39  \n11              0.8       0.15  102.0  7.37  \n\n[12 rows x 37 columns]"},"exec_count":9}},"pos":3,"scrolled":true,"start":1618988640435,"state":"done","type":"cell"}
{"cell_type":"code","end":1618988647241,"exec_count":10,"id":"b8325b","input":"from sklearn.svm import SVC\nX_engineered = pd.read_pickle(X_picklename)\nX_train, X_test, y_train, y_test = train_test_split(X_engineered, y, test_size=0.2)\nX_train, X_eval, y_train, y_eval = train_test_split(X_train, y_train, test_size=0.4)\n#results = {}\n#for kernel in ('linear', 'poly', 'rbf'):\n#    clf = SVC(kernel=kernel, gamma=2)\n#    clf.fit(X_train, y_train)\n#    print(kernel)\n#    results[kernel] = clf.predict(y_test)\n#    #print(clf.predict(y_test))\n\n#from sklearn.ensemble import RandomForestClassifier\n#clf = RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1),\n#clf.fit(X_train, y_train)\n#score = clf.score(X_test, y_test)\n\n#from sklearn.neighbors import KNeighborsClassifier\n#neigh = KNeighborsClassifier(n_neighbors=3)\n#neigh.fit(X_train, y_train)\n#y_pred = neigh.predict(X_test)\n\nimport numpy as np\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\n\n# Always scale the input. The most convenient way is to use a pipeline.\n#clf = make_pipeline(StandardScaler(),\n#                    SGDClassifier(max_iter=2000, tol=1e-3))\n#clf.fit(X_train, y_train)\n\n#clf = SVC(kernel='linear', gamma=2)\n#clf.fit(X_train, y_train)\n\n#print(\"sum: \", sum(y_test))\n#y_pred = clf.predict(X_test)\n#print(\"diff: \", sum(abs(y_pred-y_test)))\nfrom sklearn.metrics import classification_report\n#print(classification_report(y_pred,y_test))\n#from sklearn.multioutput import MultiOutputRegressor\n#clf = MultiOutputRegressor(Ridge(random_state=100)).fit(X_train, y_train)\n\n# Get predictions for test data\n#y_test_pred = clf.predict(X_test)\n#computing the R2 score:\n#clf.score(X_test, y_test)\n#from sklearn.tree import DecisionTreeClassifier\n#clf = DecisionTreeClassifier()\n#clf.fit(X_train, y_train)\n#y_pred = clf.predict(X_test)\n#print(classification_report(y_pred, y_test))","kernel":"python3","pos":12,"start":1618988647185,"state":"done","type":"cell"}
{"cell_type":"code","end":1618988904639,"exec_count":15,"id":"c7faf7","input":"y_test_np = np.array(y_test)\nX_test_np = np.array(X_test)\ny_pred = xg.predict(X_test_np)\nprint(sum(y_pred))\nprint(sum(y_test_np))","kernel":"python3","output":{"0":{"ename":"XGBoostError","evalue":"need to call fit or load_model beforehand","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mXGBoostError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-d21026a12def>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0my_test_np\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mX_test_np\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mxg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_np\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test_np\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/xgboost/sklearn.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, data, output_margin, ntree_limit, validate_features, base_margin)\u001b[0m\n\u001b[1;32m    882\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mntree_limit\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    883\u001b[0m             \u001b[0mntree_limit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"best_ntree_limit\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 884\u001b[0;31m         class_probs = self.get_booster().predict(\n\u001b[0m\u001b[1;32m    885\u001b[0m             \u001b[0mtest_dmatrix\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    886\u001b[0m             \u001b[0moutput_margin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moutput_margin\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/xgboost/sklearn.py\u001b[0m in \u001b[0;36mget_booster\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    259\u001b[0m         \"\"\"\n\u001b[1;32m    260\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'_Booster'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 261\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mXGBoostError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'need to call fit or load_model beforehand'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    262\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_Booster\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    263\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mXGBoostError\u001b[0m: need to call fit or load_model beforehand"]}},"pos":18,"scrolled":true,"start":1618988904606,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"119860","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"13c94c","input":"","pos":26,"type":"cell"}
{"cell_type":"code","exec_count":103,"id":"c18dc8","input":"X_engineered","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pid</th>\n      <th>Age</th>\n      <th>EtCO2_min</th>\n      <th>EtCO2_max</th>\n      <th>EtCO2_med</th>\n      <th>EtCO2_std</th>\n      <th>PTT_min</th>\n      <th>PTT_max</th>\n      <th>PTT_med</th>\n      <th>PTT_std</th>\n      <th>...</th>\n      <th>TroponinI_med</th>\n      <th>TroponinI_std</th>\n      <th>ABPs_min</th>\n      <th>ABPs_max</th>\n      <th>ABPs_med</th>\n      <th>ABPs_std</th>\n      <th>pH_min</th>\n      <th>pH_max</th>\n      <th>pH_med</th>\n      <th>pH_std</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>34</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>100.0</td>\n      <td>142.0</td>\n      <td>111.0</td>\n      <td>12.086807</td>\n      <td>7.33</td>\n      <td>7.41</td>\n      <td>7.37</td>\n      <td>2.256304e-02</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>86</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>31.8</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>1.154701e-01</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>8.371579e-02</td>\n      <td>119.0</td>\n      <td>148.0</td>\n      <td>128.0</td>\n      <td>8.860878</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>66</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>34.6</td>\n      <td>32.2</td>\n      <td>6.928203e-01</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>3.752777e-02</td>\n      <td>86.0</td>\n      <td>168.0</td>\n      <td>121.5</td>\n      <td>29.626335</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>66</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>53.8</td>\n      <td>32.2</td>\n      <td>6.235383e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>94.0</td>\n      <td>110.0</td>\n      <td>99.0</td>\n      <td>5.773503</td>\n      <td>7.33</td>\n      <td>7.39</td>\n      <td>7.37</td>\n      <td>1.758098e-02</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>8</td>\n      <td>42</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.020726e-02</td>\n      <td>119.0</td>\n      <td>239.0</td>\n      <td>206.5</td>\n      <td>35.922792</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>18990</th>\n      <td>31653</td>\n      <td>52</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>25.8</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>1.847521e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>75.0</td>\n      <td>119.0</td>\n      <td>107.5</td>\n      <td>17.288111</td>\n      <td>7.33</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>1.556998e-02</td>\n    </tr>\n    <tr>\n      <th>18991</th>\n      <td>31654</td>\n      <td>66</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>119.0</td>\n      <td>187.0</td>\n      <td>160.0</td>\n      <td>17.028497</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>18992</th>\n      <td>31656</td>\n      <td>44</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>88.0</td>\n      <td>120.0</td>\n      <td>103.0</td>\n      <td>12.405705</td>\n      <td>7.25</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>4.097301e-02</td>\n    </tr>\n    <tr>\n      <th>18993</th>\n      <td>31657</td>\n      <td>70</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>101.0</td>\n      <td>124.0</td>\n      <td>111.0</td>\n      <td>7.089792</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>18994</th>\n      <td>31658</td>\n      <td>60</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>119.0</td>\n      <td>137.0</td>\n      <td>123.0</td>\n      <td>7.977240</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n  </tbody>\n</table>\n<p>18995 rows × 138 columns</p>\n</div>","text/plain":"         pid  Age  EtCO2_min  EtCO2_max  EtCO2_med  EtCO2_std  PTT_min  \\\n0          1   34       33.0       33.0       33.0        0.0     32.2   \n1          2   86       33.0       33.0       33.0        0.0     31.8   \n2          4   66       33.0       33.0       33.0        0.0     32.2   \n3          6   66       33.0       33.0       33.0        0.0     32.2   \n4          8   42       33.0       33.0       33.0        0.0     32.2   \n...      ...  ...        ...        ...        ...        ...      ...   \n18990  31653   52       33.0       33.0       33.0        0.0     25.8   \n18991  31654   66       33.0       33.0       33.0        0.0     32.2   \n18992  31656   44       33.0       33.0       33.0        0.0     32.2   \n18993  31657   70       33.0       33.0       33.0        0.0     32.2   \n18994  31658   60       33.0       33.0       33.0        0.0     32.2   \n\n       PTT_max  PTT_med       PTT_std  ...  TroponinI_med  TroponinI_std  \\\n0         32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n1         32.2     32.2  1.154701e-01  ...           0.15   8.371579e-02   \n2         34.6     32.2  6.928203e-01  ...           0.15   3.752777e-02   \n3         53.8     32.2  6.235383e+00  ...           0.15   2.898975e-17   \n4         32.2     32.2  7.421377e-15  ...           0.15   2.020726e-02   \n...        ...      ...           ...  ...            ...            ...   \n18990     32.2     32.2  1.847521e+00  ...           0.15   2.898975e-17   \n18991     32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n18992     32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n18993     32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n18994     32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n\n       ABPs_min  ABPs_max  ABPs_med   ABPs_std  pH_min  pH_max  pH_med  \\\n0         100.0     142.0     111.0  12.086807    7.33    7.41    7.37   \n1         119.0     148.0     128.0   8.860878    7.37    7.37    7.37   \n2          86.0     168.0     121.5  29.626335    7.37    7.37    7.37   \n3          94.0     110.0      99.0   5.773503    7.33    7.39    7.37   \n4         119.0     239.0     206.5  35.922792    7.37    7.37    7.37   \n...         ...       ...       ...        ...     ...     ...     ...   \n18990      75.0     119.0     107.5  17.288111    7.33    7.37    7.37   \n18991     119.0     187.0     160.0  17.028497    7.37    7.37    7.37   \n18992      88.0     120.0     103.0  12.405705    7.25    7.37    7.37   \n18993     101.0     124.0     111.0   7.089792    7.37    7.37    7.37   \n18994     119.0     137.0     123.0   7.977240    7.37    7.37    7.37   \n\n             pH_std  \n0      2.256304e-02  \n1      9.276721e-16  \n2      9.276721e-16  \n3      1.758098e-02  \n4      9.276721e-16  \n...             ...  \n18990  1.556998e-02  \n18991  9.276721e-16  \n18992  4.097301e-02  \n18993  9.276721e-16  \n18994  9.276721e-16  \n\n[18995 rows x 138 columns]"},"exec_count":103,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"f005c0","input":"y","output":{"0":{"data":{"text/plain":"array([0, 1, 1, 0, 0, 1, 1, 1, 0, 0])"},"exec_count":104,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"f95ff9","input":"#features: min,max,med,std\n#data = {'col_1': [3, 2, 1, 0], 'col_2': ['a', 'b', 'c', 'd']}\ndata = {'pid':[], 'Age':[]}\nmax_pid = X_filled['pid'].max()\nfeats = all_features[3:]\nprint(\"max: \",max_pid)\nfor feat in feats:\n        feat_min_name = f\"{feat}_min\"\n        feat_max_name = f\"{feat}_max\"\n        feat_med_name = f\"{feat}_med\"\n        feat_std_name = f\"{feat}_std\"\n        data[feat_min_name] = []\n        data[feat_max_name] = []\n        data[feat_med_name] = []\n        data[feat_std_name] = []\nfor i in set(X_filled['pid']):\n    if i%100 ==0:\n        print(i)\n    pid = i\n    data['pid'].append(i)\n    age = int(X_filled[X_filled[\"pid\"] == i]['Age'].min())\n    data['Age'].append(age)\n    #print(age)\n    for feat in feats:\n        feat_min_name = f\"{feat}_min\"\n        data[feat_min_name].append(X_filled[X_filled[\"pid\"] == i][feat].min())\n        feat_max_name = f\"{feat}_max\"\n        data[feat_max_name].append(X_filled[X_filled[\"pid\"] == i][feat].max())\n        feat_med_name = f\"{feat}_med\"\n        data[feat_med_name].append(X_filled[X_filled[\"pid\"] == i][feat].median())\n        feat_std_name = f\"{feat}_std\"\n        data[feat_std_name].append(X_filled[X_filled[\"pid\"] == i][feat].std())\n#print(data)\n\n#for i in range(100):\n#    plt.plot(X_filled[X_filled[\"pid\"] == i][all_features[3:]])\n#    plt.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"max:  31658\n100\n200\n300\n400\n500\n700\n800\n900\n1000\n1300\n1400\n1500\n1600\n1900\n2000\n2200\n2400\n2500\n2600\n2700\n2900\n3000\n3100\n3200\n3300\n3500\n3700\n3900\n4100\n4200\n4400\n4500\n4600\n4700\n5000\n5200\n5300\n5500\n5700\n6100\n6500\n6700\n6800\n6900\n7000\n7100\n7300\n7400\n7500\n7600\n7700\n7900\n8000\n8100\n8300\n8500\n8800\n9100\n9200\n9300\n9500\n9600\n9900\n10000\n10200\n10300\n10400\n10600\n10700\n10800\n10900\n11000\n11300\n11700\n11800\n11900\n12000\n12100\n12200\n12500\n12600\n12700\n12900\n13100\n13200\n13400\n13600\n14000\n14200\n14700\n14900\n15100\n15200\n15400\n15600\n15800\n15900\n16000\n16100\n16300\n16400\n16800\n16900\n17100\n17200\n17400\n17500\n17600\n17700\n17800\n18000\n18200\n18600\n18700\n18800\n19200\n19400\n19500\n19600\n19900\n20000\n20100\n20200\n20300\n20400\n20600\n20700\n20800\n20900\n21000\n21200\n21500\n21600\n21700\n21800\n21900\n22000\n22100\n22300\n22700\n22800\n23000\n23300\n23700\n23800\n24000\n24100\n24200\n24300\n24400\n24500\n24600\n25100\n25200\n25400\n25600\n25900\n26000\n26100\n26200\n26700\n26800\n27000\n27200\n27400\n27500\n27700\n27900\n28100\n28200\n28500\n28700\n28800\n28900\n29000\n29100\n29200\n29300\n29500\n29700\n29800\n30000\n30100\n30200\n30400\n30500\n30600\n30700\n30900\n31100\n31500\n"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":131,"id":"0b483c","input":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification\nX_train_rfc, y_train_rfc = make_classification(n_samples=X_train.shape[0], n_features=X_train.shape[1])\nclf = RandomForestClassifier(max_depth=5,class_weight=\"balanced\",n_estimators=200)\nclf.fit(X_train_rfc, y_train_rfc)\ny_pred = clf.predict(X_test)","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":132,"id":"663894","input":"sum(y_pred)","output":{"0":{"data":{"text/plain":"3734"},"exec_count":132,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":133,"id":"63d236","input":"from sklearn.metrics import roc_auc_score\nauc = roc_auc_score(y_test,y_pred)\nprint(auc)","output":{"0":{"name":"stdout","output_type":"stream","text":"0.5001237867125329\n"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":134,"id":"37ce90","input":"from sklearn.svm import LinearSVC\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nprint(scaler.fit(X_train, y_train))\n\nlsvc = LinearSVC(C=1.0)\nlsvc.fit(X_train, y_train)\ny_pred = lsvc.predict(X_test)","output":{"0":{"name":"stderr","output_type":"stream","text":"/usr/local/lib/python3.8/dist-packages/sklearn/svm/_base.py:985: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n  warnings.warn(\"Liblinear failed to converge, increase \"\n"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":135,"id":"5aa1a5","input":"auc = roc_auc_score(y_test,y_pred)\nprint(auc)","output":{"0":{"name":"stdout","output_type":"stream","text":"0.5\n"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"ffbb98","input":"from sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)","output":{"0":{"name":"stderr","output_type":"stream","text":"/Users/lucaentremont/miniconda3/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n  n_iter_i = _check_optimize_result(\n"},"1":{"data":{"text/plain":"LogisticRegression()"},"exec_count":14,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"93923c","input":"import numpy as np\nfrom xgboost import XGBClassifier\nxg = XGBClassifier()\nX_train_np = np.array(X_train.loc[:, df.columns != 'b'])\ny_train_np = np.array(y_train.drop('pid', axis=1))\nX_eval_np = np.array(X_eval)\ny_eval_np = np.array(y_eval)\nX_train\n\n#xg.fit(X_train_np, y_train_np, eval_metric=\"auc\", early_stopping_rounds=5, eval_set=[(X_eval_np, y_eval_np)])","kernel":"python3","output":{"0":{"ename":"KeyError","evalue":"\"['pid'] not found in axis\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-a3e0ce72f030>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mxgboost\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mXGBClassifier\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mxg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mXGBClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mX_train_np\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pid'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0my_train_np\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pid'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mX_eval_np\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_eval\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4306\u001b[0m                 \u001b[0mweight\u001b[0m  \u001b[0;36m1.0\u001b[0m     \u001b[0;36m0.8\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4307\u001b[0m         \"\"\"\n\u001b[0;32m-> 4308\u001b[0;31m         return super().drop(\n\u001b[0m\u001b[1;32m   4309\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4310\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4151\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4152\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4153\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4154\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4155\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   4186\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4187\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4188\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4189\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4190\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   5589\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5590\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5591\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask]} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5592\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5593\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['pid'] not found in axis\""]}},"pos":17,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":21,"id":"0fc18d","input":"print(classification_report(y_pred, y_test_np))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n         0.0       1.00      0.94      0.97      3796\n         1.0       0.00      0.00      0.00         3\n\n    accuracy                           0.94      3799\n   macro avg       0.50      0.47      0.48      3799\nweighted avg       1.00      0.94      0.97      3799\n\n"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"b6cef6","input":"X_test","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pid</th>\n      <th>Age</th>\n      <th>EtCO2_min</th>\n      <th>EtCO2_max</th>\n      <th>EtCO2_med</th>\n      <th>EtCO2_std</th>\n      <th>PTT_min</th>\n      <th>PTT_max</th>\n      <th>PTT_med</th>\n      <th>PTT_std</th>\n      <th>...</th>\n      <th>TroponinI_med</th>\n      <th>TroponinI_std</th>\n      <th>ABPs_min</th>\n      <th>ABPs_max</th>\n      <th>ABPs_med</th>\n      <th>ABPs_std</th>\n      <th>pH_min</th>\n      <th>pH_max</th>\n      <th>pH_med</th>\n      <th>pH_std</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>17149</th>\n      <td>28582</td>\n      <td>68</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>28.5</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>1.086278e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>89.0</td>\n      <td>124.0</td>\n      <td>98.0</td>\n      <td>11.049476</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>3397</th>\n      <td>5587</td>\n      <td>78</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>106.0</td>\n      <td>182.0</td>\n      <td>129.5</td>\n      <td>20.462086</td>\n      <td>7.05</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.237604e-02</td>\n    </tr>\n    <tr>\n      <th>3494</th>\n      <td>5759</td>\n      <td>85</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>48.0</td>\n      <td>32.2</td>\n      <td>4.561067e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>90.0</td>\n      <td>127.0</td>\n      <td>103.0</td>\n      <td>12.724053</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>939</th>\n      <td>1594</td>\n      <td>83</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>99.0</td>\n      <td>124.0</td>\n      <td>111.0</td>\n      <td>7.969639</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>6126</th>\n      <td>10150</td>\n      <td>31</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>84.0</td>\n      <td>119.0</td>\n      <td>92.0</td>\n      <td>11.424323</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>16746</th>\n      <td>27931</td>\n      <td>63</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>119.0</td>\n      <td>201.0</td>\n      <td>189.5</td>\n      <td>23.863723</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>12545</th>\n      <td>20897</td>\n      <td>53</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>36.5</td>\n      <td>32.2</td>\n      <td>1.241303e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>102.0</td>\n      <td>121.0</td>\n      <td>108.5</td>\n      <td>6.386539</td>\n      <td>7.31</td>\n      <td>7.45</td>\n      <td>7.37</td>\n      <td>3.018880e-02</td>\n    </tr>\n    <tr>\n      <th>1749</th>\n      <td>2908</td>\n      <td>83</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>7.421377e-15</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>84.0</td>\n      <td>119.0</td>\n      <td>98.5</td>\n      <td>10.660036</td>\n      <td>7.35</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>5.773503e-03</td>\n    </tr>\n    <tr>\n      <th>853</th>\n      <td>1443</td>\n      <td>39</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>27.6</td>\n      <td>32.2</td>\n      <td>32.2</td>\n      <td>1.477380e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>115.0</td>\n      <td>135.0</td>\n      <td>127.0</td>\n      <td>5.401319</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>7.37</td>\n      <td>9.276721e-16</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>24</td>\n      <td>85</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>33.0</td>\n      <td>0.0</td>\n      <td>32.2</td>\n      <td>54.1</td>\n      <td>32.2</td>\n      <td>6.321985e+00</td>\n      <td>...</td>\n      <td>0.15</td>\n      <td>2.898975e-17</td>\n      <td>82.0</td>\n      <td>130.0</td>\n      <td>101.0</td>\n      <td>14.951183</td>\n      <td>7.23</td>\n      <td>7.37</td>\n      <td>7.34</td>\n      <td>5.107184e-02</td>\n    </tr>\n  </tbody>\n</table>\n<p>3799 rows × 138 columns</p>\n</div>","text/plain":"         pid  Age  EtCO2_min  EtCO2_max  EtCO2_med  EtCO2_std  PTT_min  \\\n17149  28582   68       33.0       33.0       33.0        0.0     28.5   \n3397    5587   78       33.0       33.0       33.0        0.0     32.2   \n3494    5759   85       33.0       33.0       33.0        0.0     32.2   \n939     1594   83       33.0       33.0       33.0        0.0     32.2   \n6126   10150   31       33.0       33.0       33.0        0.0     32.2   \n...      ...  ...        ...        ...        ...        ...      ...   \n16746  27931   63       33.0       33.0       33.0        0.0     32.2   \n12545  20897   53       33.0       33.0       33.0        0.0     32.2   \n1749    2908   83       33.0       33.0       33.0        0.0     32.2   \n853     1443   39       33.0       33.0       33.0        0.0     27.6   \n11        24   85       33.0       33.0       33.0        0.0     32.2   \n\n       PTT_max  PTT_med       PTT_std  ...  TroponinI_med  TroponinI_std  \\\n17149     32.2     32.2  1.086278e+00  ...           0.15   2.898975e-17   \n3397      32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n3494      48.0     32.2  4.561067e+00  ...           0.15   2.898975e-17   \n939       32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n6126      32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n...        ...      ...           ...  ...            ...            ...   \n16746     32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n12545     36.5     32.2  1.241303e+00  ...           0.15   2.898975e-17   \n1749      32.2     32.2  7.421377e-15  ...           0.15   2.898975e-17   \n853       32.2     32.2  1.477380e+00  ...           0.15   2.898975e-17   \n11        54.1     32.2  6.321985e+00  ...           0.15   2.898975e-17   \n\n       ABPs_min  ABPs_max  ABPs_med   ABPs_std  pH_min  pH_max  pH_med  \\\n17149      89.0     124.0      98.0  11.049476    7.37    7.37    7.37   \n3397      106.0     182.0     129.5  20.462086    7.05    7.37    7.37   \n3494       90.0     127.0     103.0  12.724053    7.37    7.37    7.37   \n939        99.0     124.0     111.0   7.969639    7.37    7.37    7.37   \n6126       84.0     119.0      92.0  11.424323    7.37    7.37    7.37   \n...         ...       ...       ...        ...     ...     ...     ...   \n16746     119.0     201.0     189.5  23.863723    7.37    7.37    7.37   \n12545     102.0     121.0     108.5   6.386539    7.31    7.45    7.37   \n1749       84.0     119.0      98.5  10.660036    7.35    7.37    7.37   \n853       115.0     135.0     127.0   5.401319    7.37    7.37    7.37   \n11         82.0     130.0     101.0  14.951183    7.23    7.37    7.34   \n\n             pH_std  \n17149  9.276721e-16  \n3397   9.237604e-02  \n3494   9.276721e-16  \n939    9.276721e-16  \n6126   9.276721e-16  \n...             ...  \n16746  9.276721e-16  \n12545  3.018880e-02  \n1749   5.773503e-03  \n853    9.276721e-16  \n11     5.107184e-02  \n\n[3799 rows x 138 columns]"},"exec_count":21,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"19184f","input":"from sklearn.ensemble import RandomForestClassifier\n\n# train model\nrfc = RandomForestClassifier(n_estimators=10).fit(X_train_np, y_train_np)\n\n# predict on test set\ny_pred = rfc.predict(X_test_np)\nprint(classification_report(y_pred, y_test_np))","output":{"0":{"name":"stdout","output_type":"stream","text":"              precision    recall  f1-score   support\n\n         0.0       1.00      0.94      0.97      3793\n         1.0       0.00      0.00      0.00         6\n\n    accuracy                           0.94      3799\n   macro avg       0.50      0.47      0.48      3799\nweighted avg       1.00      0.94      0.97      3799\n\n"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"136494","input":"#df_features.count()","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"52fbd4","input":"a = X_filled[X_filled['pid'] == 1][all_features[3:]]\nplt.plot(a)\n","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7fd802963be0>,\n <matplotlib.lines.Line2D at 0x7fd802963cd0>,\n <matplotlib.lines.Line2D at 0x7fd802963d90>,\n <matplotlib.lines.Line2D at 0x7fd802963e50>,\n <matplotlib.lines.Line2D at 0x7fd802963f10>,\n <matplotlib.lines.Line2D at 0x7fd802963fd0>,\n <matplotlib.lines.Line2D at 0x7fd7d679d0d0>,\n <matplotlib.lines.Line2D at 0x7fd7d679d190>,\n <matplotlib.lines.Line2D at 0x7fd7d679d250>,\n <matplotlib.lines.Line2D at 0x7fd7d679d310>,\n <matplotlib.lines.Line2D at 0x7fd7d64bc760>,\n <matplotlib.lines.Line2D at 0x7fd7d679d460>,\n <matplotlib.lines.Line2D at 0x7fd7d679d520>,\n <matplotlib.lines.Line2D at 0x7fd7d679d5e0>,\n <matplotlib.lines.Line2D at 0x7fd7d679d6a0>,\n <matplotlib.lines.Line2D at 0x7fd7d679d760>,\n <matplotlib.lines.Line2D at 0x7fd7d679d820>,\n <matplotlib.lines.Line2D at 0x7fd7d679d8e0>,\n <matplotlib.lines.Line2D at 0x7fd7d679d9a0>,\n <matplotlib.lines.Line2D at 0x7fd7d679da60>,\n <matplotlib.lines.Line2D at 0x7fd7d679db20>,\n <matplotlib.lines.Line2D at 0x7fd7d679dbe0>,\n <matplotlib.lines.Line2D at 0x7fd7d679dca0>,\n <matplotlib.lines.Line2D at 0x7fd7d679dd60>,\n <matplotlib.lines.Line2D at 0x7fd7d679de20>,\n <matplotlib.lines.Line2D at 0x7fd7d679dee0>,\n <matplotlib.lines.Line2D at 0x7fd7d679dfa0>,\n <matplotlib.lines.Line2D at 0x7fd7d686a0a0>,\n <matplotlib.lines.Line2D at 0x7fd7d686a160>,\n <matplotlib.lines.Line2D at 0x7fd7d686a220>,\n <matplotlib.lines.Line2D at 0x7fd7d686a2e0>,\n <matplotlib.lines.Line2D at 0x7fd7d686a3a0>,\n <matplotlib.lines.Line2D at 0x7fd7d686a460>,\n <matplotlib.lines.Line2D at 0x7fd7d686a520>]"},"exec_count":40,"output_type":"execute_result"},"1":{"data":{"image/png":"4a63fc0f3921cc564494ddc3f48c2ec31e61cb21","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":40,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"e81eba","input":"#df_labels.count()","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"349ffc","input":"#from sklearn.ensemble import RandomForestClassifier\n#from sklearn.datasets import make_classification\n#X, y = make_classification(n_samples=1000, n_features=4,\n#...                            n_informative=2, n_redundant=0,\n#.#..                            random_state=0, shuffle=False)\n#c##lf = RandomForestClassifier(max_depth=2, random_state=0)\n#clf.fit(X, y)","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"761058","input":"X_filled.count()","metadata":{"jupyter":{"outputs_hidden":false}},"output":{"0":{"data":{"text/plain":"pid                 227940\nTime                227940\nAge                 227940\nEtCO2               227940\nPTT                 227940\nBUN                 227940\nLactate             227940\nTemp                227940\nHgb                 227940\nHCO3                227940\nBaseExcess          227940\nRRate               227940\nFibrinogen          227940\nPhosphate           227940\nWBC                 227940\nCreatinine          227940\nPaCO2               227940\nAST                 227940\nFiO2                227940\nPlatelets           227940\nSaO2                227940\nGlucose             227940\nABPm                227940\nMagnesium           227940\nPotassium           227940\nABPd                227940\nCalcium             227940\nAlkalinephos        227940\nSpO2                227940\nBilirubin_direct    227940\nChloride            227940\nHct                 227940\nHeartrate           227940\nBilirubin_total     227940\nTroponinI           227940\nABPs                227940\npH                  227940\ndtype: int64"},"exec_count":7,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"5a4e46","input":"X_engineered = pd.DataFrame.from_dict(data)","output":{"0":{"ename":"NameError","evalue":"name 'data' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-90ed100a68f7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mX_engineered\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"]}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"fe884d","input":"import matplotlib.pyplot as plt\ndf_features.mean()\nfor feat in all_features:\n    print(feat)\n    #print(sorted(X_filled[feat].dropna())[:100])\n    #plt.plot(sorted(X_filled[feat].dropna()))\n    #plt.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"pid\nTime\nAge\nEtCO2\nPTT\nBUN\nLactate\nTemp\nHgb\nHCO3\nBaseExcess\nRRate\nFibrinogen\nPhosphate\nWBC\nCreatinine\nPaCO2\nAST\nFiO2\nPlatelets\nSaO2\nGlucose\nABPm\nMagnesium\nPotassium\nABPd\nCalcium\nAlkalinephos\nSpO2\nBilirubin_direct\nChloride\nHct\nHeartrate\nBilirubin_total\nTroponinI\nABPs\npH\n"}},"pos":6,"type":"cell"}
{"id":0,"time":1618959672841,"type":"user"}
{"last_load":1618988530602,"type":"file"}