{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-bbbbb7b9-931f-42d8-b8f8-88f1b4e6c01f.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1620507845453,"exec_count":2,"id":"8b818d","input":"import pandas as pd\n#!pip install sklearn","kernel":"python3","metadata":{"jupyter":{}},"pos":0,"start":1620507845159,"state":"done","type":"cell"}
{"cell_type":"code","end":1620507845522,"exec_count":3,"id":"cbec01","input":"df = pd.read_csv(r'train.csv')\nprint(df)","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"name":"stdout","text":"       Sequence  Active\n0          DKWL       0\n1          FCHN       0\n2          KDQP       0\n3          FNWI       0\n4          NKRM       0\n...         ...     ...\n111995     GSME       0\n111996     DLPT       0\n111997     SGHC       0\n111998     KIGT       0\n111999     PGPT       0\n\n[112000 rows x 2 columns]\n"}},"pos":1,"start":1620507845462,"state":"done","type":"cell"}
{"cell_type":"code","end":1620507847693,"exec_count":4,"id":"a0aa7a","input":"import numpy as np\nfrom sklearn.model_selection import train_test_split\nX = df['Sequence']\nX_train, X_test, y_train, y_test = train_test_split(X, df['Active'], test_size=0.2, random_state=42)","kernel":"python3","metadata":{"jupyter":{}},"pos":2,"start":1620507845809,"state":"done","type":"cell"}
{"cell_type":"code","end":1620507847708,"exec_count":5,"id":"594632","input":"X_train","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"data":{"text/plain":"12385     AFML\n98624     HCKK\n84487     GYGN\n96613     WFKL\n97496     HPQT\n          ... \n76820     NQQD\n110268    FAIA\n103694    MRRI\n860       FNYG\n15795     LAYM\nName: Sequence, Length: 89600, dtype: object"},"exec_count":5}},"pos":3,"start":1620507847703,"state":"done","type":"cell"}
{"cell_type":"code","end":1620507848848,"exec_count":6,"id":"b705c6","input":"# vectorize the data\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\nvec = TfidfVectorizer(min_df=5, # at min 1% of docs\n                        max_df=.5,  \n                        max_features=2000,\n                        ngram_range=(1,2),\n                        analyzer=\"char\")\n\n# transform into TF-IDF values\nX_train_tfidf = vec.fit_transform(X_train).todense()\nX_test_tfidf = vec.transform(X_test).todense()\n","kernel":"python3","metadata":{"jupyter":{}},"pos":4,"start":1620507847714,"state":"done","type":"cell"}
{"cell_type":"code","end":1620507849355,"exec_count":7,"id":"029a6a","input":"param_dist = {'objective':'multi:softmax', 'num_class': 5, 'n_estimators':25}\nimport xgboost as xgb","kernel":"python3","metadata":{"jupyter":{}},"pos":5,"start":1620507848856,"state":"done","type":"cell"}
{"cell_type":"code","end":1620507872041,"exec_count":1,"id":"db0d9b","input":"clf = xgb.XGBModel(**param_dist)\n\n##TODO train the XGBModel \nclf.fit(X_train_tfidf, y_train,\n        eval_set=[(X_train_tfidf, y_train), (X_test_tfidf, y_test)],\n        eval_metric='merror',\n        verbose=True)\n\nevals_result = clf.evals_result()\n\npredictions = clf.predict(X_test_tfidf)\nprint(predictions[:5], y_test[:5])\nprint(accuracy_score(y_test, predictions))","kernel":"python3","metadata":{"jupyter":{}},"output":{"0":{"ename":"NameError","evalue":"name 'xgb' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-d34276396742>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mclf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mxgb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mXGBModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mparam_dist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m##TODO train the XGBModel\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m clf.fit(X_train_tfidf, y_train,\n\u001b[1;32m      5\u001b[0m         \u001b[0meval_set\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_tfidf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mX_test_tfidf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'xgb' is not defined"]}},"pos":6,"start":1620507871957,"state":"done","type":"cell"}
{"id":"917474","input":"","pos":9,"state":"done","type":"cell"}
{"id":"b61dee","input":"","pos":7,"state":"done","type":"cell"}
{"id":"d96faa","input":"","pos":8,"state":"done","type":"cell"}
{"id":0,"time":1620507779439,"type":"user"}
{"last_load":1620507779731,"type":"file"}