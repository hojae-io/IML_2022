{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-86cce214-32fd-4103-8a0f-fbc9a5c9ea49.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"5f07ef","input":"","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"e23c4f","input":"# import helper packages\nimport pandas as pd\nimport numpy as np\nfrom math import *\n\n# measuring time\nimport time\nstart_time = time.time()\n\n# Read and split data\ndf = pd.read_csv(\"1B/train.csv\")\nX_train, y = df.iloc[:,2:], df.iloc[:,1]","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"0382f2","input":"#function implementng the feature vector\ndef phi(x):\n    phi = []\n    #linear features:\n    phi = phi + x\n    #quadratic features:\n    phi = phi + [a*a for a in x]\n    #exponential features:\n    phi = phi + [exp(a) for a in x]\n    #cosine features:\n    phi = phi + [cos(a) for a in x]\n    #constant feature:\n    phi = phi + [1]\n    return phi","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"69d36d","input":"phis = []\n# iterating over rows and cols to apply the phi function\nfor index, row in X_train.iterrows():\n    phi_row = []\n    for x in row:\n        phi_row.append(x)\n    phi_row = phi(phi_row)\n    phis.append(phi_row)\nX = np.array(phis)\n\n# applying the closed form solution for the linear regression\nXt = X.T\nws = np.linalg.pinv(Xt.dot(X)).dot(Xt).dot(y)\n\n# outputting the weights into a csv\ndf_export = pd.DataFrame(ws)\ndf_export.to_csv(f'output{time.time()}.csv', index=False, header=False)","pos":2,"scrolled":true,"type":"cell"}
{"id":0,"time":1617196119057,"type":"user"}
{"last_load":1617195607536,"type":"file"}